name: build
on:
  pull_request:
  push:
    tags:
      - "*"
      - "!v*"
  workflow_dispatch:
    inputs:
      branch_or_tag:
        required: false
      publish_release_artefacts:
        type: boolean
        required: true
        default: false

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        otp:
          - "24.3.4.2-2"
        elixir:
          - "1.13.4"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch_or_tag }}
          fetch-depth: 0
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - uses: docker/login-action@v2
        if: startsWith(github.ref, 'refs/tags/') || inputs.publish_release_artefacts
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ startsWith(github.ref, 'refs/tags/') || inputs.publish_release_artefacts }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FROM=ghcr.io/emqx/emqx-builder/5.0-31:${{ matrix.elixir }}-${{ matrix.otp }}-debian11

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        otp:
          - "24.3.4.2-2"
        elixir:
          - "1.13.4"
        quic_support:
          - true
          - false
        os:
          - ubuntu22.04
          - ubuntu20.04
          - ubuntu18.04
          - ubuntu16.04
          - debian11
          - debian10
          - debian9
          - el9
          - el8
          - el7
          - amzn2
    container:
      image: ghcr.io/emqx/emqx-builder/5.0-31:${{ matrix.elixir }}-${{ matrix.otp }}-${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_or_tag }}
      - shell: bash
        run: |
          [ "false" == ${{ matrix.quic_support }} ] && export BUILD_WITHOUT_QUIC=1
          git config --global --add safe.directory $(pwd)
          make
      - if: failure()
        run: cat rebar3.crashdump
      - run: ./_build/emqtt_bench/rel/emqtt_bench/bin/emqtt_bench
      - uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ./*.tar.gz

  mac:
    strategy:
      fail-fast: false
      matrix:
        macos:
          - macos-12
          - macos-11
        otp:
          - "24.3.4.2-2"

    runs-on: ${{ matrix.macos }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_or_tag }}
      - name: prepare
        run: |
          brew install curl zip unzip gnu-sed kerl unixodbc freetds
          echo "/usr/local/bin" >> $GITHUB_PATH
          git config --global credential.helper store
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.kerl
          key: otp-${{ matrix.otp }}-${{ matrix.macos }}
      - name: build erlang
        if: steps.cache.outputs.cache-hit != 'true'
        timeout-minutes: 60
        run: |
          kerl build git https://github.com/emqx/otp.git OTP-${{ matrix.otp }} ${{ matrix.otp }}
          kerl install ${{ matrix.otp }} $HOME/.kerl/${{ matrix.otp }}
      - name: Make
        shell: bash
        run: |
          . $HOME/.kerl/${{ matrix.otp }}/activate
          make
      - if: failure()
        run: cat rebar3.crashdump
      - run: ./_build/emqtt_bench/rel/emqtt_bench/bin/emqtt_bench
      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/') || inputs.publish_release_artefacts
        with:
          name: packages
          path: ./*.tar.gz

  release:
    runs-on: ubuntu-latest
    needs:
      - linux
      - mac
    if: startsWith(github.ref, 'refs/tags/') || inputs.publish_release_artefacts

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: packages
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Emqtt Bench ${{ github.ref }} Released
          body: Emqtt Bench ${{ github.ref }} Released
          draft: false
          prerelease: false
      - uses: Rory-Z/upload-release-asset@v1
        with:
          repo: emqtt-bench
          path: "packages/emqtt-bench-*"
          token: ${{ github.token }}
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: upload to aws s3
        run: |
          set -euo pipefail
          aws s3 cp --recursive packages s3://${{ secrets.AWS_S3_BUCKET }}/emqtt-bench/${{ github.ref_name }}
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID }} --paths "/emqtt-bench/${{ github.ref_name }}/*"
